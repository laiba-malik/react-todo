{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malik\\\\Desktop\\\\Internship\\\\react-todo\\\\todo-frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport axios from \"axios\";\nimport API from \"./API\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = async id => {\n      const payload = {\n        completed: !this.state.todos.find(todo => todo._id === id).completed\n      };\n      const updatedTodo = await API.updateTodo(id, payload);\n      this.setState(this.state.todos.map(todo => todo._id === id ? updatedTodo : todo));\n    };\n\n    this.delete = async id => {\n      await API.deleteTodo(id);\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo._id !== id)]\n      });\n    };\n\n    this.addTodo = async title => {\n      //   const newTodo = {\n      //     title: title,\n      //     completed: false\n      //   }\n      //   axios.post(\"/todos\", newTodo)\n      //   .then(res => {\n      //     console.log(123)\n      //     this.setState({ todos: [...this.state.todos, res.data] })})\n      // }\n      if (!title) {\n        alert(\"You did not enter a title!\");\n        return;\n      }\n\n      if (this.state.todos.find(({\n        task\n      }) => task === title)) {\n        alert(`Task: ${title} already exists`);\n        return;\n      }\n\n      const newTodo = await API.createTodo(title);\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n\n    this.edit = async (id, title) => {\n      const payload = {\n        title: title\n      };\n      const updatedTodo = await API.updateTodo(id, payload);\n      this.setState(this.state.todos.map(todo => todo._id === id ? updatedTodo : todo));\n    };\n  }\n\n  sortArray() {\n    try {\n      if (this.state.todos) {\n        this.setState({\n          todos: this.state.todos.slice(this.state.todos.sort((a, b) => console.log(a.date - b.date)).reverse())\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount() {\n    axios.get(\"/todos\").then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Todos, {\n      todos: this.state.todos,\n      markComplete: this.markComplete,\n      delete: this.delete,\n      edit: this.edit.bind(this),\n      sortArray: this.sortArray.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/malik/Desktop/Internship/react-todo/todo-frontend/src/App.js"],"names":["React","Component","Todos","Header","Input","axios","API","App","state","todos","markComplete","id","payload","completed","find","todo","_id","updatedTodo","updateTodo","setState","map","delete","deleteTodo","filter","addTodo","title","alert","task","newTodo","createTodo","edit","sortArray","slice","sort","a","b","console","log","date","reverse","e","componentDidMount","get","then","res","data","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Todos from \"./components/Todos\"\nimport Header from \"./components/Header\"\nimport Input from \"./components/Input\"\nimport axios from \"axios\"\nimport API from \"./API\"\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n  \n  markComplete = async (id) => {\n  const payload = {\n    completed: !this.state.todos.find(todo => todo._id === id).completed,\n  }\n  const updatedTodo = await API.updateTodo(id, payload)\n  this.setState(this.state.todos.map(todo => (todo._id === id ? updatedTodo : todo)))\n  }\n\n  delete = async (id) => {\n    await API.deleteTodo(id)\n    this.setState({\n      todos: [...this.state.todos.filter(\n        todo => todo._id !== id\n      )]\n    })\n  }\n\n  addTodo = async (title) => {\n  //   const newTodo = {\n  //     title: title,\n  //     completed: false\n  //   }\n\n  //   axios.post(\"/todos\", newTodo)\n  //   .then(res => {\n  //     console.log(123)\n  //     this.setState({ todos: [...this.state.todos, res.data] })})\n  // }\n  if (!title) {\n    alert(\"You did not enter a title!\")\n    return\n  }\n  if (this.state.todos.find(({ task }) => task === title)) {\n    alert(`Task: ${title} already exists`)\n    return\n  }\n  const newTodo = await API.createTodo(title)\n  this.setState({ todos: [...this.state.todos, newTodo] }) \n}\n\n\n  sortArray () {\n    try {\n      if (this.state.todos)  {\n        this.setState({\n          todos: this.state.todos.slice(\n            this.state.todos.sort(\n              (a, b) => console.log(a.date-b.date)).reverse()\n            ) }\n          )\n        }\n      }\n      catch(e) {console.log(e)}\n  }\n\n  edit = async(id, title) => {\n    const payload = {\n      title: title\n      }\n      const updatedTodo = await API.updateTodo(id, payload)\n      this.setState(this.state.todos.map(todo => (todo._id === id ? updatedTodo : todo)))\n    }\n\n  componentDidMount() {\n    axios.get(\"/todos\")\n    .then(res => this.setState({todos: res.data}))\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Input addTodo = { this.addTodo }/>\n        <Todos \n        todos = { this.state.todos } \n        markComplete = { this.markComplete }\n        delete = { this.delete }\n        edit = { this.edit.bind(this) }\n        sortArray = { this.sortArray.bind(this) }\n        />\n      </div>\n    )\n  }\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}